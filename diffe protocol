#include <stdio.h>
#include <stdlib.h>
#include <math.h>

long long power(long long base, unsigned long long exp, long long mod) {
    long long result = 1;
    base = base % mod;
    while (exp > 0) {
        if (exp % 2 == 1)
            result = (result * base) % mod;
        exp = exp >> 1;
        base = (base * base) % mod;
    }
    return result;
}

long long diffieHellman(long long base, long long private_key, long long mod) {
    return power(base, private_key, mod);
}

int main() {
    long long base = 5;
    long long mod = 23;

    long long alice_private_key = 6;
    long long bob_private_key = 15;

    long long alice_public_key = diffieHellman(base, alice_private_key, mod);
    long long bob_public_key = diffieHellman(base, bob_private_key, mod);

    long long alice_shared_secret = diffieHellman(bob_public_key, alice_private_key, mod);
    long long bob_shared_secret = diffieHellman(alice_public_key, bob_private_key, mod);

    printf("Alice's private key: %lld\n", alice_private_key);
    printf("Bob's private key: %lld\n", bob_private_key);
    printf("Alice's public key: %lld\n", alice_public_key);
    printf("Bob's public key: %lld\n", bob_public_key);
    printf("Shared secret for Alice: %lld\n", alice_shared_secret);
    printf("Shared secret for Bob: %lld\n", bob_shared_secret);

    return 0;
}
