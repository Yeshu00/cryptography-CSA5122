#include <stdio.h>
#include <stdlib.h>

#define MAX_PAIRS 100
#define MAX_SIZE 10


int modInverse(int a, int m) {
    a = a % m;
    for (int x = 1; x < m; x++) {
        if ((a * x) % m == 1)
            return x;
    }
    return -1;
}


void multiply(int key[MAX_SIZE][MAX_SIZE], int vector[MAX_SIZE], int result[MAX_SIZE], int size) {
    for (int i = 0; i < size; i++) {
        result[i] = 0;
        for (int j = 0; j < size; j++) {
            result[i] += key[i][j] * vector[j];
        }
        result[i] %= 26; 
    }
}


void knownPlaintextAttack(int plaintext[MAX_PAIRS][MAX_SIZE], int ciphertext[MAX_PAIRS][MAX_SIZE], int size, int pairs) {
    
    int key[MAX_SIZE][MAX_SIZE];
    for (int i = 0; i < size; i++) {
        for (int j = 0; j < size; j++) {
            key[i][j] = 0;
            for (int k = 0; k < pairs; k++) {
                key[i][j] += plaintext[k][i] * modInverse(ciphertext[k][j], 26);
            }
            key[i][j] %= 26;
        }
    }

    
    printf("Recovered key matrix:\n");
    for (int i = 0; i < size; i++) {
        for (int j = 0; j < size; j++) {
            printf("%d ", key[i][j]);
        }
        printf("\n");
    }
}

int main() {
    int plaintext[MAX_PAIRS][MAX_SIZE], ciphertext[MAX_PAIRS][MAX_SIZE];
    int size, pairs;

    
    printf("Enter the size of the key matrix: ");
    scanf("%d", &size);


    printf("Enter the number of plaintext-ciphertext pairs: ");
    scanf("%d", &pairs);

    
    printf("Enter the plaintext-ciphertext pairs:\n");
    for (int i = 0; i < pairs; i++) {
        printf("Pair %d:\n", i + 1);
        printf("Plaintext: ");
        for (int j = 0; j < size; j++) {
            scanf("%d", &plaintext[i][j]);
        }
        printf("Ciphertext: ");
        for (int j = 0; j < size; j++) {
            scanf("%d", &ciphertext[i][j]);
        }
    }

    knownPlaintextAttack(plaintext, ciphertext, size, pairs);

    return 0;
}
