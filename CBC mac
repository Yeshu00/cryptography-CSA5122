#include <stdio.h>
#include <string.h>

#define BLOCK_SIZE 8

void xorBlocks(const unsigned char *block1, const unsigned char *block2, unsigned char *result) {
    for (int i = 0; i < BLOCK_SIZE; i++) {
        result[i] = block1[i] ^ block2[i];
    }
}

void cbcMac(const unsigned char *key, const unsigned char *message, unsigned char *mac) {
    memcpy(mac, message, BLOCK_SIZE);
    xorBlocks(mac, key, mac);
}

int main() {
    unsigned char key[BLOCK_SIZE] = {0x01, 0x23, 0x45, 0x67, 0x89, 0xAB, 0xCD, 0xEF};
    unsigned char message[BLOCK_SIZE] = {0x12, 0x34, 0x56, 0x78, 0x9A, 0xBC, 0xDE, 0xF0};
    unsigned char mac[BLOCK_SIZE];

    cbcMac(key, message, mac);

    unsigned char twoBlockMessage[BLOCK_SIZE * 2];
    memcpy(twoBlockMessage, message, BLOCK_SIZE);
    xorBlocks(message, mac, twoBlockMessage + BLOCK_SIZE);

    cbcMac(key, twoBlockMessage, mac);

    printf("Original CBC-MAC for one-block message: ");
    for (int i = 0; i < BLOCK_SIZE; i++) {
        printf("%02X ", mac[i]);
    }
    printf("\n");

    printf("CBC-MAC for two-block message (X || (X âŠ• T)): ");
    for (int i = 0; i < BLOCK_SIZE; i++) {
        printf("%02X ", mac[i]);
    }
    printf("\n");

    return 0;
}
