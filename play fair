#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <ctype.h>


#define SIZE 5

void generateKeyMatrix(char key[], char keyMatrix[SIZE][SIZE]) {
    int k, i, j;
    char keySet[26] = {'\0'};
    k = 0;

    for (i = 0; i < strlen(key); i++) {
        if (key[i] != ' ' && strchr(keySet, toupper(key[i])) == NULL) {
            keySet[k++] = toupper(key[i]);
        }
    }

  
    for (i = 'A'; i <= 'Z'; i++) {
        if (i != 'J' && strchr(keySet, i) == NULL) {
            keySet[k++] = i;
        }
    }

  
    k = 0;
    for (i = 0; i < SIZE; i++) {
        for (j = 0; j < SIZE; j++) {
            keyMatrix[i][j] = keySet[k++];
        }
    }
}

void findPosition(char keyMatrix[SIZE][SIZE], char ch, int *row, int *col) {
    if (ch == 'J') ch = 'I';  // I and J are usually treated as the same in Playfair cipher

    for (*row = 0; *row < SIZE; (*row)++) {
        for (*col = 0; *col < SIZE; (*col)++) {
            if (keyMatrix[*row][*col] == ch) {
                return;
            }
        }
    }
}

void encryptPlayfair(char keyMatrix[SIZE][SIZE], char plaintext[]) {
    int i, j, row1, col1, row2, col2;
    char ciphertext[strlen(plaintext)];
    
    for (i = 0; i < strlen(plaintext); i += 2) {
        findPosition(keyMatrix, toupper(plaintext[i]), &row1, &col1);
        findPosition(keyMatrix, toupper(plaintext[i + 1]), &row2, &col2);

      
        if (row1 == row2) {
            ciphertext[i] = keyMatrix[row1][(col1 + 1) % SIZE];
            ciphertext[i + 1] = keyMatrix[row2][(col2 + 1) % SIZE];
        }
      
        else if (col1 == col2) {
            ciphertext[i] = keyMatrix[(row1 + 1) % SIZE][col1];
            ciphertext[i + 1] = keyMatrix[(row2 + 1) % SIZE][col2];
        }
        
        else {
            ciphertext[i] = keyMatrix[row1][col2];
            ciphertext[i + 1] = keyMatrix[row2][col1];
        }
    }

  
    ciphertext[i] = '\0';

  
    printf("Encrypted text: %s\n", ciphertext);
}

int main() {
    char key[50], plaintext[100], keyMatrix[SIZE][SIZE];

  
    printf("Enter the key: ");
    fgets(key, sizeof(key), stdin);

  
    key[strcspn(key, "\n")] = '\0';

    
    generateKeyMatrix(key, keyMatrix);

    printf("Enter the plaintext (in pairs, no spaces): ");
    scanf("%s", plaintext);

    
    encryptPlayfair(keyMatrix, plaintext);

    return 0;
}
